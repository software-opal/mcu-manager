name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            file: mcu-manager.exe
          - os: ubuntu-latest
            file: mcu-manager
    runs-on: ${{ matrix.os }}
    steps:
      - run: sudo apt install pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all
      - name: Upload release
        uses: actions/upload-artifact@v1
        with:
          name: release-${{ matrix.os }}
          path: build/release/${{ matrix.file }}
  upload-release-assets:
    name: Upload Release Assets
    strategy:
      matrix:
        include:
          - os: windows-latest
            file: mcu-manager.exe
          - os: ubuntu-latest
            file: mcu-manager
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: release-${{ matrix.os }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  build/release/${{ matrix.file }}
          asset_name: ${{ matrix.file }}
          asset_content_type: application/zip
